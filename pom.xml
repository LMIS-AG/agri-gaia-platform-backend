<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.6</version>
  </parent>

  <groupId>de.agrigaia.platform</groupId>
  <artifactId>platform-parent</artifactId>
  <packaging>pom</packaging>
  <version>0.1.0-SNAPSHOT</version>

  <modules>
    <module>platform-application</module>
    <module>platform-api</module>
    <module>platform-business</module>
    <module>platform-integration</module>
    <module>platform-model</module>
    <module>platform-persistence</module>
    <module>platform-common</module>
  </modules>

  <properties>
    <java.version>11</java.version>
    <kotlin.version>1.7.10</kotlin.version>
    <kotlin.compiler.incremental>true</kotlin.compiler.incremental>

    <spring-boot.version>2.7.1</spring-boot.version>
    <mapstruct.version>1.5.2.Final</mapstruct.version>
    <keycloak.version>20.0.1</keycloak.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
      </dependency>

      <dependency>
        <groupId>de.agrigaia.platform</groupId>
        <artifactId>platform-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.agrigaia.platform</groupId>
        <artifactId>platform-application</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.agrigaia.platform</groupId>
        <artifactId>platform-business</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.agrigaia.platform</groupId>
        <artifactId>platform-integration</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.agrigaia.platform</groupId>
        <artifactId>platform-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.agrigaia.platform</groupId>
        <artifactId>platform-persistence</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>de.agrigaia.platform</groupId>
        <artifactId>platform-common</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.keycloak</groupId>
        <artifactId>keycloak-admin-client</artifactId>
        <version>${keycloak.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-kotlin</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test-junit5</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <executions>
          <!-- Since MapStruct generated Java classes, we must configure the compiler for both kotlin and java:
               as described here: https://kotlinlang.org/docs/maven.html#compile-kotlin-and-java-sources -->
          <execution>
            <id>compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>
          <execution>
            <id>test-compile</id>
            <goals>
              <goal>test-compile</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
              </sourceDirs>
            </configuration>
          </execution>

          <!-- Configure annotation processing with kapt (https://kotlinlang.org/docs/kapt.html) -->
          <execution>
            <id>kapt</id>
            <goals>
              <goal>kapt</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>src/main/kotlin</sourceDir>
              </sourceDirs>
              <annotationProcessorPaths>
                <annotationProcessorPath>
                  <groupId>org.mapstruct</groupId>
                  <artifactId>mapstruct-processor</artifactId>
                  <version>${mapstruct.version}</version>
                </annotationProcessorPath>
                <annotationProcessorPath>
                  <groupId>org.springframework.boot</groupId>
                  <artifactId>spring-boot-configuration-processor</artifactId>
                  <version>${spring-boot.version}</version>
                </annotationProcessorPath>
              </annotationProcessorPaths>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Since MapStruct generated Java classes, we must configure the compiler for both kotlin and java:
           as described here: https://kotlinlang.org/docs/maven.html#compile-kotlin-and-java-sources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <!-- Replacing default-compile as it is treated specially by maven -->
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <!-- Replacing default-testCompile as it is treated specially by maven -->
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <repository>
      <id>project.release</id>
      <url>${project.release.repository.url}</url>
    </repository>
    <snapshotRepository>
      <id>project.snapshots</id>
      <url>${project.snapshots.repository.url}</url>
    </snapshotRepository>
  </distributionManagement>
</project>

